openapi: 3.0.3
info:
  title: My movie DB
  version: 1.0.0
  description: Movies database management
paths:
  /cast/:
    get:
      operationId: cast_list
      tags:
      - cast
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
          description: ''
  /cast/{person_id}/:
    get:
      operationId: cast_retrieve
      parameters:
      - in: path
        name: person_id
        schema:
          type: integer
        required: true
      tags:
      - cast
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    put:
      operationId: cast_update
      parameters:
      - in: path
        name: person_id
        schema:
          type: integer
        required: true
      tags:
      - cast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    patch:
      operationId: cast_partial_update
      parameters:
      - in: path
        name: person_id
        schema:
          type: integer
        required: true
      tags:
      - cast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    delete:
      operationId: cast_destroy
      parameters:
      - in: path
        name: person_id
        schema:
          type: integer
        required: true
      tags:
      - cast
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /cast/add/:
    get:
      operationId: cast_add_list
      tags:
      - cast
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
          description: ''
    post:
      operationId: cast_add_create
      tags:
      - cast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /movies/:
    get:
      operationId: movies_list
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
          description: ''
  /movies/{movie_id}/:
    get:
      operationId: movies_retrieve
      parameters:
      - in: path
        name: movie_id
        schema:
          type: integer
        required: true
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    put:
      operationId: movies_update
      parameters:
      - in: path
        name: movie_id
        schema:
          type: integer
        required: true
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Movie'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Movie'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    patch:
      operationId: movies_partial_update
      parameters:
      - in: path
        name: movie_id
        schema:
          type: integer
        required: true
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMovie'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMovie'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMovie'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    delete:
      operationId: movies_destroy
      parameters:
      - in: path
        name: movie_id
        schema:
          type: integer
        required: true
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /movies/add/:
    get:
      operationId: movies_add_list
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
          description: ''
    post:
      operationId: movies_add_create
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Movie'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Movie'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
  /movies/characters/:
    get:
      operationId: movies_characters_list
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Character'
          description: ''
  /movies/characters/{character_id}/:
    get:
      operationId: movies_characters_retrieve
      parameters:
      - in: path
        name: character_id
        schema:
          type: integer
        required: true
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
          description: ''
    put:
      operationId: movies_characters_update
      parameters:
      - in: path
        name: character_id
        schema:
          type: integer
        required: true
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Character'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Character'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
          description: ''
    patch:
      operationId: movies_characters_partial_update
      parameters:
      - in: path
        name: character_id
        schema:
          type: integer
        required: true
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCharacter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCharacter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCharacter'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
          description: ''
    delete:
      operationId: movies_characters_destroy
      parameters:
      - in: path
        name: character_id
        schema:
          type: integer
        required: true
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /movies/characters/add/:
    get:
      operationId: movies_characters_add_list
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Character'
          description: ''
    post:
      operationId: movies_characters_add_create
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Character'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Character'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
          description: ''
  /reviews/:
    get:
      operationId: reviews_list
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
          description: ''
  /reviews/{review_id}/:
    get:
      operationId: reviews_retrieve
      parameters:
      - in: path
        name: review_id
        schema:
          type: integer
        required: true
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: reviews_update
      parameters:
      - in: path
        name: review_id
        schema:
          type: integer
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: reviews_partial_update
      parameters:
      - in: path
        name: review_id
        schema:
          type: integer
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: reviews_destroy
      parameters:
      - in: path
        name: review_id
        schema:
          type: integer
        required: true
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /reviews/add/:
    get:
      operationId: reviews_add_list
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
          description: ''
    post:
      operationId: reviews_add_create
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
components:
  schemas:
    Character:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nickname:
          type: string
          maxLength: 100
        movie:
          type: integer
        actor:
          type: integer
        review:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          readOnly: true
      required:
      - actor
      - id
      - movie
      - nickname
      - review
    Movie:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        release_date:
          type: string
          format: date
        description:
          type: string
        director:
          type: integer
        review:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          readOnly: true
      required:
      - description
      - director
      - id
      - release_date
      - review
      - title
    PatchedCharacter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nickname:
          type: string
          maxLength: 100
        movie:
          type: integer
        actor:
          type: integer
        review:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          readOnly: true
    PatchedMovie:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        release_date:
          type: string
          format: date
        description:
          type: string
        director:
          type: integer
        review:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          readOnly: true
    PatchedPerson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        birthday:
          type: string
          format: date
        role:
          type: string
          maxLength: 100
        review:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          readOnly: true
    PatchedReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content_type:
          type: integer
        object_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        review_text:
          type: string
        rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    Person:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        birthday:
          type: string
          format: date
        role:
          type: string
          maxLength: 100
        review:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          readOnly: true
      required:
      - birthday
      - first_name
      - id
      - last_name
      - review
      - role
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content_type:
          type: integer
        object_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        review_text:
          type: string
        rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - content_type
      - id
      - object_id
      - rating
      - review_text
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
